{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Marginal costs - basic concept and example\n",
    "In this sample, we illustrate the concept of marginal costs. We use a very simple portfolio of generation assets that are used to cover a given load. The marginal costs of the portfolio indicate at which prices it would be valuable to buy or sell electricity into / out of the portfolio.\n",
    "\n",
    "While the example portfolio is simple, the concept is valid for any other case of more complex portfolio or asset"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Some prerequisites\n",
    "### Basic definitions"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {},
   "outputs": [],
   "source": [
    "import numpy as np\n",
    "import pandas as pd\n",
    "import datetime as dt\n",
    "\n",
    "# in case eao is not installed\n",
    "#import os\n",
    "#import sys\n",
    "# in case eao is not installed, set path\n",
    "#myDir = os.path.join(os.getcwd(), '../..')\n",
    "#sys.path.append(myDir)\n",
    "#addDir = os.path.join(os.getcwd(), '../../../..')\n",
    "#sys.path.append(addDir)\n",
    "\n",
    "import eaopack as eao\n",
    "from eaopack.assets import Node, Timegrid, Contract, Storage, SimpleContract\n",
    "from eaopack.portfolio import Portfolio\n",
    "import matplotlib.pyplot as plt"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Parameter setting\n",
    "Defining timegrid and main portfolio settings. Note that we do not explain the setup in detail. Please refer to the basic samples to understand the concepts and parameters"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {},
   "outputs": [],
   "source": [
    "Start = dt.date(2021,1,1)\n",
    "End   = dt.date(2021,1,10)\n",
    "timegrid = Timegrid(Start, End, freq = 'h')\n",
    "node  = Node(name = 'node', commodity='power', unit='MWh')\n",
    "# very simple setup, working directly on the time grid. Alternatively we can use\n",
    "# dictionaries with start/end and values\n",
    "load_profile   = -(5+5*(np.cos(np.linspace(0.,10., timegrid.T))))\n",
    "# capacities and costs of generation assets in portfolio\n",
    "capacities = [1,2,3,2,8]\n",
    "costs      = [1,1.5,1.8,4,6]"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Set up portfolio\n",
    "(1) a given load to cover\n",
    "(2) generation assets with different production costs"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {},
   "outputs": [],
   "source": [
    "assets = []\n",
    "assets.append(Contract(name = 'load', min_cap= load_profile, max_cap= load_profile, nodes = node))\n",
    "counter = 0\n",
    "for my_cap, my_costs in zip(capacities, costs):\n",
    "        counter +=1\n",
    "        myc = 2 # capacity of each contract\n",
    "        assets.append(SimpleContract(name = 'gen_'+str(counter), nodes = node, extra_costs = my_costs,max_cap = my_cap))\n",
    "portf = Portfolio(assets)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Perform the optimization\n",
    "Setting up the optimization provlem ans solving. Note that in this setup no (market) prices are needed to solve the problem, as we try to cover the load at minimal costs"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {},
   "outputs": [],
   "source": [
    "optim_problem  = portf.setup_optim_problem(timegrid = timegrid)\n",
    "result         = optim_problem.optimize()\n",
    "output = eao.io.extract_output(portf, optim_problem, result)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Some minor manupulations to create nicer charts ..."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {},
   "outputs": [],
   "source": [
    "output['prices'].rename(columns = {'nodal price: node':'nodal price'}, inplace = True)\n",
    "# omit load (is given by sum of generation)\n",
    "output['dispatch'].drop(columns = ['load'], inplace = True)\n",
    "output['dispatch'] = output['dispatch'].round(3)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Create charts and interpret the results"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 700x300 with 2 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.rcdefaults()\n",
    "fig, ax = plt.subplots(1,2,figsize=(7,3), tight_layout = True)\n",
    "output['dispatch'].plot.area(ax = ax[0], stacked = True, alpha = 0.7)\n",
    "output['prices'].plot(ax = ax[1])\n",
    "ax[0].set_title('Cumulative asset dispatch')\n",
    "ax[0].set_ylabel('MW')\n",
    "ax[1].set_title('Marginal production cost')\n",
    "ax[1].set_ylabel('€/MWh')\n",
    "ax[1].legend(loc = 'upper right')\n",
    "plt.show()\n",
    "#plt.savefig(file_chart)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Left figure:\n",
    "Dispatch of the single assets. The generation units 1-5 are dispatched in the order of their production costs. At lower loads we need only gen_1, while at higher loads we need all of them.\n",
    "\n",
    "Right figure:\n",
    "The marginal costs are determined by the most expensive asset needed."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Marginal costs and duals in linear programs\n",
    "\n",
    "The marginal cost for each node is given by the dual of the corresponding nodal restriction. Intuitively, it reflects the change in value of the portfolio as at the node we have an infinitesimal extra amount of the commodity available.\n",
    "\n",
    "In this simple case, the marginal costs are just the production costs of the most expensive asset needed. However, the concept applies directly to any other and more complex portfolio of assets. \n",
    "\n",
    "Once more nodes are used in the portfolio, nodal prices may be different if there are transport bottlenecks."
   ]
  }
 ],
 "metadata": {
  "hide_input": false,
  "kernelspec": {
   "display_name": "my_env",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.12.9"
  },
  "toc": {
   "base_numbering": 1,
   "nav_menu": {},
   "number_sections": true,
   "sideBar": true,
   "skip_h1_title": false,
   "title_cell": "Table of Contents",
   "title_sidebar": "Contents",
   "toc_cell": false,
   "toc_position": {},
   "toc_section_display": true,
   "toc_window_display": false
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
