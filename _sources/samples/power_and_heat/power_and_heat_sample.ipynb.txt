{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Einfaches Beispiel \"Strom und Wärme\"\n",
    "\n",
    "Eine einfache Illustration, in der wir verschiedene Anlagen verbinden:\n",
    "* KWK Anlage\n",
    "* P2H (z.B. Wärmepumpe, Geothermie)\n",
    "* Wärmespeicher\n",
    "\n",
    "... plus (festem) Wärmebedarf und Strompreise\n",
    "\n",
    "Das Wärmenetz besteht aus \"Nord\", \"Süd\" plus Verbindung\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### Ein paar Vorbereitungen in Python"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {},
   "outputs": [],
   "source": [
    "import eaopack as eao\n",
    "#####################################################\n",
    "import pandas as pd\n",
    "import datetime as dt\n",
    "import matplotlib.pyplot as plt\n",
    "%matplotlib inline"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### Definition der \"Knoten\", also der grundsätzlichen Struktur\n",
    "\n",
    "Knoten bilden den virtuellen Punkt, in dem Wärme- und Stromanlagen angeschlossen sind. Die Knoten können durch \"Transporte\" verbunden werden"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Definition der phys. Einheiten\n",
    "unit_power      = eao.assets.Unit(volume = 'MWh(el)', flow = 'MW(el)')\n",
    "unit_heat       = eao.assets.Unit(volume = 'MWh(th)', flow = 'MW(th)')\n",
    "# Definition der Knoten\n",
    "node_power      = eao.assets.Node(name = 'strom'      , unit = unit_power)\n",
    "node_heat_nord  = eao.assets.Node(name = 'waerme_nord', unit = unit_heat)\n",
    "node_heat_sued  = eao.assets.Node(name = 'waerme_sued', unit = unit_heat)\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### Definition der einzelnen Anlagen und Verträge\n",
    "\n",
    "Notiz: Wir vermeiden eine grundsätzliche Unterscheidung zwischen phys. Anlagen und Verträgen. Z.B. \n",
    "* der Wärmebedarf kann auch als zu erfüllender Absatzvertrag gesehen werden\n",
    "* es könnten auch Strom-Terminverträge eingebunden werden (so physisch erfüllt)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {},
   "outputs": [],
   "source": [
    "\n",
    "# (1) Wärmespeicher\n",
    "storage = eao.assets.Storage(name       = 'speicher', \n",
    "                            nodes       = node_heat_nord, \n",
    "                            cap_out     = .5, \n",
    "                            cap_in      = .5, \n",
    "                            size        = 3., \n",
    "                            start_level = 0.25, \n",
    "                            end_level   = 0.25,\n",
    "                            eff_in      = 0.9, \n",
    "                            block_size  = 'd')     # Speicher soll täglich neu optimiert werden (nicht \"leer hinterlassen\")\n",
    "\n",
    "# (2) Power to Heat Anlage (die Wärmepumpe). Hier vereinfacht abgebildet\n",
    "#     Wir können zu einem gegebenen Wirkungsgrad \"Strom in Wärme tauschen\"\n",
    "power2heat   = eao.assets.MultiCommodityContract(name = 'P2H',                           # Wärmepumpe (z.B. Geothermie)\n",
    "                                                 min_cap = 0, \n",
    "                                                 max_cap = 2, \n",
    "                                                 nodes = [node_power, node_heat_nord],   # Lokalisierung: Knoten Nord für Wärme  -  plus Stromknoten\n",
    "                                                 factors_commodities=[-1, 2])            # Wirkundsgrad: 1 MWh Strom zu 2 MWh Wärme\n",
    "\n",
    "# (3) Kraft-Wärme-Kopplung (KWK). Hier als GuD abgebildet\n",
    "#     Achtung - hier sind einige Parameter als Standardwerte gesetzt, die je nach Anwendungsfall angepasst werden sollten\n",
    "KWK    = eao.assets.CHPAsset(name = \"KWK\", \n",
    "                                   min_cap     = 0, \n",
    "                                   max_cap     = 5,                             # max. Leistung Strom\n",
    "                                   nodes       = [node_power, node_heat_sued],  # Erzeugung von Strom und Wärme in die entsprechenden Netze, bei Bedarf auch Gas\n",
    "                                   start_costs = 0,                             # im Beispiel keine Startkosten\n",
    "                                   extra_costs = 25,                            # Brennstoffkosten in €/MWh, natürlich auch als Zeitreihe möglich\n",
    "                                   conversion_factor_power_heat=0.5,            # Verhältnis Produktion Wärme zu Strom 2:1, d.h. 1MW Stromverlust bei 2MW Wärmeproduktion\n",
    "                                   max_share_heat = .5)                         # max. Anteil der Wärme an Gesamtproduktion (in MWh)\n",
    "                                   ### ..viele weitere Parameter möglich, siehe Dokumentation. Z.B. Rampen, Mindestlaufzeiten, etc.\n",
    "\n",
    "# (4) Wärmebedarf\n",
    "#     Der Wärmebedarf muss immer gedeckt werden. Hier als \"Contract\" abgebildet; Maximum = Minimum bedeutet \"keine Flexibilität\"\n",
    "bedarf_nord  = eao.assets.Contract(name = \"bedarf_nord\",  \n",
    "                                   min_cap  = \"waerme_bedarf_nord\", # Referenziert auf Bezeichnung in Datenquelle\n",
    "                                   max_cap  = \"waerme_bedarf_nord\", \n",
    "                                   nodes    = node_heat_nord)\n",
    "bedarf_sued  = eao.assets.Contract(name     = \"bedarf_sued\",\n",
    "                                   min_cap  = \"waerme_bedarf_sued\", \n",
    "                                   max_cap  = \"waerme_bedarf_sued\", \n",
    "                                   nodes = node_heat_sued)\n",
    "# (5) Wärmeübertragungsnetz. Hier als \"Transport\" Asset abgebildet\n",
    "#     Generell wird der Fluss immer in eine Richtung definiert. Daher im Beispiel 2 einzelne Richtungen Süd->Nord und Nord->Süd\n",
    "netz_nord_sued  = eao.assets.Transport(name = 'netz_ns', \n",
    "                                       max_cap = 2,                 # max. Wärmeübertragungskapazität\n",
    "                                       nodes = [node_heat_nord, node_heat_sued])\n",
    "netz_sued_nord  = eao.assets.Transport(name = 'netz_sn', \n",
    "                                       max_cap = 1.5,\n",
    "                                       nodes = [node_heat_sued, node_heat_nord])\n",
    "\n",
    "# (3) Strommarkt\n",
    "#     Wir können praktisch unbegrenzt Strom kaufen und verkaufen - zum vorgegebenen Preis\n",
    "market       = eao.assets.SimpleContract(name = 'strommarkt', price='strompreis', min_cap= -1000, max_cap=1000, nodes = node_power)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### Portfolio zusammensetzen\n",
    "Die Anlagen und Verträge bilden die Details ab. Mit der Information zu den Knoten können sie einfach im Portfolio zusammengefasst werden\n",
    "* Szenarioanalyse mit und ohne Anlagen\n",
    "* auch viele Einzel-Portfolien möglich, falls nur Teile modelliert werden\n",
    "* Teil-Portfolien können bei Bedarf als eine Anlage im Gesamtmodell zusammengefasst werden"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {},
   "outputs": [],
   "source": [
    "portf        = eao.portfolio.Portfolio([storage, \n",
    "                                        power2heat, \n",
    "                                        KWK, \n",
    "                                        market, \n",
    "                                        bedarf_nord, \n",
    "                                        bedarf_sued, \n",
    "                                        netz_nord_sued, \n",
    "                                        netz_sued_nord])"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### Graphische Darstellung\n",
    "Automatisch generiert. Im GUI kann die Darstellung angepasst werden.\n",
    "* Gelb: Knoten\n",
    "* Grau: Assets\n",
    "* Pfeile: Anbindung der Assets an Knoten oder Transport"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "eao.network_graphs.create_graph(portf = portf, title = 'Beispiel: Wärmenetz mit KWK, Wärmepumpe und Speicher')"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### Randbemerkung\n",
    "Das EAO ist so aufgesetzt, dass es einfach an eigene Datenbanken und Systeme angebunden werden kann.\n",
    "Z.B. können alle Daten einfach in JSON exportiert (und eingelesen) werden. So auch im GUI"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {},
   "outputs": [],
   "source": [
    "## in JSON File speichern zur weiteren Verwendung, z.B. in eigener Datenbank, dem GUI, etc. Genauso für Assets, etc.\n",
    "eao.serialization.to_json(portf, 'portf.json')      # Gesamtbeispiel\n",
    "eao.serialization.to_json(storage, 'speicher.json')\n",
    "# ... etc. für alle Assets möglich'"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### Daten laden\n",
    "Hier: Preise und Wärmebedarf aus Excel Datei laden"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>strompreis</th>\n",
       "      <th>waerme_bedarf_nord</th>\n",
       "      <th>waerme_bedarf_sued</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>datum</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>2020-01-01 00:00:00</th>\n",
       "      <td>41.88</td>\n",
       "      <td>-2.11</td>\n",
       "      <td>-0.31</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2020-01-01 01:00:00</th>\n",
       "      <td>38.60</td>\n",
       "      <td>-2.17</td>\n",
       "      <td>-0.39</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2020-01-01 02:00:00</th>\n",
       "      <td>36.55</td>\n",
       "      <td>-2.20</td>\n",
       "      <td>-0.49</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2020-01-01 03:00:00</th>\n",
       "      <td>32.32</td>\n",
       "      <td>-2.20</td>\n",
       "      <td>-0.59</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2020-01-01 04:00:00</th>\n",
       "      <td>30.85</td>\n",
       "      <td>-2.17</td>\n",
       "      <td>-0.70</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                     strompreis  waerme_bedarf_nord  waerme_bedarf_sued\n",
       "datum                                                                  \n",
       "2020-01-01 00:00:00       41.88               -2.11               -0.31\n",
       "2020-01-01 01:00:00       38.60               -2.17               -0.39\n",
       "2020-01-01 02:00:00       36.55               -2.20               -0.49\n",
       "2020-01-01 03:00:00       32.32               -2.20               -0.59\n",
       "2020-01-01 04:00:00       30.85               -2.17               -0.70"
      ]
     },
     "execution_count": 7,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data = pd.read_excel(\"2020_sample_daten.xlsx\")\n",
    "data.set_index('datum', inplace=True)\n",
    "data.round(2).head()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### Optimierung durchführen"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "metadata": {},
   "outputs": [],
   "source": [
    "Start = dt.date(2020,1,1)\n",
    "End   = dt.date(2020,1,3)\n",
    "tg    = eao.assets.Timegrid(Start, End, freq = 'h')     # hier: stündlich optimieren\n",
    "out   = eao.optimize(portf = portf, timegrid = tg, data = data)\n",
    "### Solver nach Geschmack leicht austauschbar. Z.B. Gurobi, CPLEX, freie Solver: SCIP, HIGHS ...\n",
    "# out = eao.optimize(portf = portf, timegrid = tg, data = data, solver = 'SCIP')\n",
    "### Split problem\n",
    "out   = eao.optimize(portf = portf, timegrid = tg, data = data)\n",
    "# out   = eao.optimize(portf = portf, timegrid = tg, data = data, split_interval_size='MS')"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### Randnotiz \"Performance und Größenbeschränkung\":\n",
    "\n",
    "* MIP und LP: Kann das Portfolio als \"LP\" gelöst werden, ist die Rechenzeit deutlich schneller, als bei einem MIP. Hier kann über den Parameter \"make_soft_problem\" in der Optimierung gesteuert werden\n",
    "* Solver sind nach Geschmack leicht austauschbar. Z.B. Gurobi, CPLEX, freie Solver: SCIP, HIGHS ...\n",
    "* Generell erzeugen Speicher in der Optimierung leicht schwer lösbare Probleme. Hier empfehlen wir, die \"block_size\" z.B. auf täglich/wöchentlich zu setzen. So wird der Speicher nur über innerhalb jeden Tages / jeder Woche optimiert\n",
    "* \"Split Optimization\": Für die meisten Probleme ist es eine gute Näherung, das Problem für jede Woche/ jeden Monat etc. zu lösen. In der entsprechenden Variante setzt EAO die Lösung automatisch zusammen. Randbedingungen wie Speicher Level oder Mindestmengen werden heruntergebrochen"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### Resultate analysieren\n",
    "Vereinfachte Darstellung. Im Normalfall Export nach Excel oder in eine Schnittstelle in Datenbanken"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Values</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Parameter</th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>status</th>\n",
       "      <td>successful</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>value</th>\n",
       "      <td>1267.861623</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                Values\n",
       "Parameter             \n",
       "status      successful\n",
       "value      1267.861623"
      ]
     },
     "execution_count": 9,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "out['summary'] # Zusammenfassung. Gesantwert in € (Deckungsbeitrag)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>2020-01-01 00:00:00</th>\n",
       "      <th>2020-01-01 01:00:00</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>speicher</th>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>P2H</th>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>KWK</th>\n",
       "      <td>-125.00</td>\n",
       "      <td>-125.00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>strommarkt</th>\n",
       "      <td>164.02</td>\n",
       "      <td>143.65</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>bedarf_nord</th>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>bedarf_sued</th>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>netz_ns</th>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>netz_sn</th>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "             2020-01-01 00:00:00  2020-01-01 01:00:00\n",
       "speicher                    0.00                 0.00\n",
       "P2H                         0.00                 0.00\n",
       "KWK                      -125.00              -125.00\n",
       "strommarkt                164.02               143.65\n",
       "bedarf_nord                 0.00                 0.00\n",
       "bedarf_sued                 0.00                 0.00\n",
       "netz_ns                     0.00                 0.00\n",
       "netz_sn                     0.00                 0.00"
      ]
     },
     "execution_count": 10,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "out['DCF'].transpose().iloc[:,0:2].round(2) # Detailsicht auf die Cash Flows (auch diskontierte Optimierung möglich (DCF / Maximierung des NPV))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "                           2020-01-01 00:00:00  2020-01-01 01:00:00\n",
      "speicher (waerme_nord)                    0.25                 0.00\n",
      "P2H (strom)                              -0.73                -0.90\n",
      "P2H (waerme_nord)                         1.46                 1.80\n",
      "KWK (strom)                               4.65                 4.62\n",
      "KWK (waerme_sued)                         0.70                 0.76\n",
      "strommarkt (strom)                       -3.92                -3.72\n",
      "bedarf_nord (waerme_nord)                -2.11                -2.17\n",
      "bedarf_sued (waerme_sued)                -0.31                -0.39\n",
      "netz_ns (waerme_nord)                    -0.60                -0.61\n",
      "netz_ns (waerme_sued)                     0.60                 0.61\n",
      "netz_sn (waerme_sued)                    -0.99                -0.98\n",
      "netz_sn (waerme_nord)                     0.99                 0.98\n"
     ]
    }
   ],
   "source": [
    "# Detailsicht auf die Betriebsweise der Anlagen (in MWh)\n",
    "print(out['dispatch'].transpose().iloc[:,0:2].round(2)) "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>2020-01-01 00:00:00</th>\n",
       "      <th>2020-01-01 01:00:00</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>nodal price: waerme_nord</th>\n",
       "      <td>20.94</td>\n",
       "      <td>19.30</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>nodal price: strom</th>\n",
       "      <td>41.88</td>\n",
       "      <td>38.60</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>nodal price: waerme_sued</th>\n",
       "      <td>20.94</td>\n",
       "      <td>19.30</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>input data: strompreis</th>\n",
       "      <td>41.88</td>\n",
       "      <td>38.60</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>input data: waerme_bedarf_nord</th>\n",
       "      <td>-2.11</td>\n",
       "      <td>-2.17</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>input data: waerme_bedarf_sued</th>\n",
       "      <td>-0.31</td>\n",
       "      <td>-0.39</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                                2020-01-01 00:00:00  2020-01-01 01:00:00\n",
       "nodal price: waerme_nord                      20.94                19.30\n",
       "nodal price: strom                            41.88                38.60\n",
       "nodal price: waerme_sued                      20.94                19.30\n",
       "input data: strompreis                        41.88                38.60\n",
       "input data: waerme_bedarf_nord                -2.11                -2.17\n",
       "input data: waerme_bedarf_sued                -0.31                -0.39"
      ]
     },
     "execution_count": 12,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Detailsicht auf die EIngangsgrößen (in €/MWh bzw. MW)  [hier vor Allem die vorgegebenen Preise, andere Analysen möglich --> Kosten für die Wärme pro Stunde]\n",
    "out['prices'].transpose().iloc[:,0:2].round(2)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### Darstellung in Graphiken -- zur Diskussion"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 1200x400 with 3 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "df = pd.merge(out['dispatch'], out['prices'], left_index=True, right_index=True, how='left')\n",
    "\n",
    "heat = ['P2H (waerme_nord)',\n",
    "        'KWK (waerme_sued)',\n",
    "        'speicher (waerme_nord)']\n",
    "power = ['P2H (strom)',\n",
    "         'KWK (strom)']\n",
    "\n",
    "fig, ax = plt.subplots(1,3, tight_layout = True, figsize=(12,4))\n",
    "df[heat].plot(ax = ax[0], style = '-')\n",
    "df[power].plot(ax = ax[1], style = '-')\n",
    "df['input data: strompreis'].plot(ax = ax[2], style = '-')\n",
    "ax[0].set_title('Wärme')\n",
    "ax[1].set_title('Strom')\n",
    "ax[2].set_title('Strompreis')\n",
    "plt.show()\n"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "my_env",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.12.9"
  },
  "orig_nbformat": 2
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
